{"ast":null,"code":"var _jsxFileName = \"F:\\\\FUNIX COURSE\\\\REACTJS\\\\Assignment 01\\\\src\\\\pages\\\\home\\\\NavBar\\\\NavBarItem\\\\NavBarItem.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./NavBarItem.css\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NavBarItem = props => {\n  _s();\n\n  const [isActive, setIsActive] = useState(props.data);\n\n  const clickMenuHandler = index => {\n    const id = isActive.findIndex(el => el.active === true);\n\n    if (id !== index) {\n      const newArr = isActive.map((el, stt) => {\n        if (stt === id) {\n          return { ...el,\n            active: false\n          };\n        } else if (stt === index) {\n          return { ...el,\n            active: true\n          };\n        } else return { ...el\n        };\n      });\n      setIsActive(newArr);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"navbar width-50 mt-3 py-3\",\n    children: isActive.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `nav-item fs-6 ${item.active ? \"active\" : \"\"}`,\n        onClick: () => clickMenuHandler(index),\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: `fa ${item.icon}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), \" \", item.type]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NavBarItem, \"OcE7z0Q/MpS6BkVnu2lPMtY2xI4=\");\n\n_c = NavBarItem;\nexport default NavBarItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavBarItem\");","map":{"version":3,"sources":["F:/FUNIX COURSE/REACTJS/Assignment 01/src/pages/home/NavBar/NavBarItem/NavBarItem.jsx"],"names":["useState","NavBarItem","props","isActive","setIsActive","data","clickMenuHandler","index","id","findIndex","el","active","newArr","map","stt","item","icon","type"],"mappings":";;;AAAA,OAAO,kBAAP;AACA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC5B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAACE,KAAK,CAACG,IAAP,CAAxC;;AACA,QAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAClC,UAAMC,EAAE,GAAGL,QAAQ,CAACM,SAAT,CAAoBC,EAAD,IAAQA,EAAE,CAACC,MAAH,KAAc,IAAzC,CAAX;;AACA,QAAIH,EAAE,KAAKD,KAAX,EAAkB;AAChB,YAAMK,MAAM,GAAGT,QAAQ,CAACU,GAAT,CAAa,CAACH,EAAD,EAAKI,GAAL,KAAa;AACvC,YAAIA,GAAG,KAAKN,EAAZ,EAAgB;AACd,iBAAO,EAAE,GAAGE,EAAL;AAASC,YAAAA,MAAM,EAAE;AAAjB,WAAP;AACD,SAFD,MAEO,IAAIG,GAAG,KAAKP,KAAZ,EAAmB;AACxB,iBAAO,EAAE,GAAGG,EAAL;AAASC,YAAAA,MAAM,EAAE;AAAjB,WAAP;AACD,SAFM,MAEA,OAAO,EAAE,GAAGD;AAAL,SAAP;AACR,OANc,CAAf;AAOAN,MAAAA,WAAW,CAACQ,MAAD,CAAX;AACD;AACF,GAZD;;AAaA,sBACE;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA,cACGT,QAAQ,CAACU,GAAT,CAAa,CAACE,IAAD,EAAOR,KAAP,KAAiB;AAC7B,0BACE;AACE,QAAA,SAAS,EAAG,iBAAgBQ,IAAI,CAACJ,MAAL,GAAc,QAAd,GAAyB,EAAG,EAD1D;AAEE,QAAA,OAAO,EAAE,MAAML,gBAAgB,CAACC,KAAD,CAFjC;AAAA,gCAKE;AAAG,UAAA,SAAS,EAAG,MAAKQ,IAAI,CAACC,IAAK;AAA9B;AAAA;AAAA;AAAA;AAAA,gBALF,OAKyCD,IAAI,CAACE,IAL9C;AAAA,SAGOV,KAHP;AAAA;AAAA;AAAA;AAAA,cADF;AASD,KAVA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CA9BD;;GAAMN,U;;KAAAA,U;AAgCN,eAAeA,UAAf","sourcesContent":["import \"./NavBarItem.css\";\r\nimport { useState } from \"react\";\r\n\r\nconst NavBarItem = (props) => {\r\n  const [isActive, setIsActive] = useState(props.data);\r\n  const clickMenuHandler = (index) => {\r\n    const id = isActive.findIndex((el) => el.active === true);\r\n    if (id !== index) {\r\n      const newArr = isActive.map((el, stt) => {\r\n        if (stt === id) {\r\n          return { ...el, active: false };\r\n        } else if (stt === index) {\r\n          return { ...el, active: true };\r\n        } else return { ...el };\r\n      });\r\n      setIsActive(newArr);\r\n    }\r\n  };\r\n  return (\r\n    <nav className=\"navbar width-50 mt-3 py-3\">\r\n      {isActive.map((item, index) => {\r\n        return (\r\n          <div\r\n            className={`nav-item fs-6 ${item.active ? \"active\" : \"\"}`}\r\n            onClick={() => clickMenuHandler(index)}\r\n            key={index}\r\n          >\r\n            <i className={`fa ${item.icon}`}></i> {item.type}\r\n          </div>\r\n        );\r\n      })}\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBarItem;\r\n"]},"metadata":{},"sourceType":"module"}